user nginx;
worker_processes auto;

# Увеличиваем лимит открытых файлов
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;  # Используем epoll для лучшей производительности на Linux
}

http {
    # Скрываем версию Nginx
    server_tokens off;

    # Базовые настройки
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Улучшенный формат логирования
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main buffer=16k;  # Буферизация логов

    # Оптимизация производительности
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    reset_timedout_connection on;  # Сброс тайм-аут соединений

    # Настройки буферов
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Настройки кэширования
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Сжатие ответов
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css text/xml application/json
               application/javascript application/xml+rss application/atom+xml
               image/svg+xml text/javascript application/x-javascript
               application/x-httpd-php application/x-yaml text/x-yaml;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";  # Отключаем для старых IE

    # Защита от DDoS
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

    # Определяем upstream для Django
    upstream megano_app {
        server ${CONTAINER_APP_NAME}:8000;
        keepalive 32;
        keepalive_requests 100;  # Количество запросов через одно keepalive соединение
        keepalive_timeout 60s;   # Таймаут keepalive соединений
    }

    server {
        listen 80;
#         server_name ${SERVER_DOMAIN};

        # Защита от медленных запросов
        client_body_timeout 10s;
        client_header_timeout 10s;
        send_timeout 10s;

        # Максимальный размер загружаемых файлов
        client_max_body_size 10M;

        # Защита от неизвестных HTTP методов
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
            return 444;
        }

        # Защита от плохих ботов
        if ($http_user_agent ~* (msnbot|Purebot|Baiduspider|Lipperhey|Mail.Ru|scrapbot) ) {
            return 403;
        }

        # Статические файлы
        location /static/ {
            alias /app/static/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header X-Content-Type-Options "nosniff" always;  # Добавляем защиту

            # Защита от хотлинкинга
            valid_referers none blocked server_names *.${SERVER_DOMAIN} ${SERVER_DOMAIN};
            if ($invalid_referer) {
                return 403;
            }

            # Ограничение скорости отдачи
            limit_rate 1024k;

            # Разрешаем только GET и HEAD для статики
            limit_except GET HEAD {
                deny all;
            }
        }

        # Медиа файлы
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header X-Content-Type-Options "nosniff" always;  # Добавляем защиту

            # Защита от хотлинкинга
            valid_referers none blocked server_names *.${SERVER_DOMAIN} ${SERVER_DOMAIN};
            if ($invalid_referer) {
                return 403;
            }

            # Ограничение скорости отдачи
            limit_rate 1024k;

            # Разрешаем только GET и HEAD для медиа
            limit_except GET HEAD {
                deny all;
            }
        }

        # Все запросы
        location / {
            # Защита от DDoS
            limit_conn addr 10;
            limit_req zone=req_limit burst=20 nodelay;

            # Basic защита
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header X-Download-Options "noopen" always;
            add_header X-Permitted-Cross-Domain-Policies "none" always;

            proxy_pass http://megano_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Настройки для WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Таймауты
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Настройки буферизации
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 16k;
            proxy_busy_buffers_size 16k;
            proxy_temp_file_write_size 64k;

            # Обработка ошибок
            proxy_intercept_errors on;
            error_page 500 502 503 504 /50x.html;
        }

        # Страница ошибок
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Запрет доступа к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Запрет доступа к бэкапам и временным файлам
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}